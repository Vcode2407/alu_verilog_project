$date
	Mon Jun 30 00:40:44 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ALU_tb $end
$var wire 1 ! zero $end
$var wire 8 " result [7:0] $end
$var wire 1 # overflow $end
$var wire 1 $ carry $end
$var parameter 32 % NUM_TESTS $end
$var parameter 32 & WIDTH $end
$var reg 8 ' a [7:0] $end
$var reg 8 ( b [7:0] $end
$var reg 1 ) dir $end
$var reg 3 * op [2:0] $end
$scope module dut $end
$var wire 8 + a [7:0] $end
$var wire 8 , b [7:0] $end
$var wire 1 ) dir $end
$var wire 3 - op [2:0] $end
$var parameter 32 . WIDTH $end
$var reg 1 $ carry $end
$var reg 1 # overflow $end
$var reg 8 / result [7:0] $end
$var reg 9 0 tmp_result [8:0] $end
$var reg 1 ! zero $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 .
b1000 &
b10100 %
$end
#0
$dumpvars
b11010010 0
b11010010 /
b0 -
b1000000 ,
b10010010 +
b0 *
0)
b1000000 (
b10010010 '
0$
0#
b11010010 "
0!
$end
#5000
1$
b11000000 "
b11000000 /
b111000000 0
b1 *
b1 -
b11000110 (
b11000110 ,
b10000110 '
b10000110 +
#10000
b110 "
b110 /
b0 0
0$
1)
b100 *
b100 -
b10000110 (
b10000110 ,
b10000000 '
b10000000 +
#15000
b11101100 "
b11101100 /
0)
b101 *
b101 -
b11000110 (
b11000110 ,
b11110110 '
b11110110 +
#20000
b11000100 "
b11000100 /
b1010101 (
b1010101 ,
b1100010 '
b1100010 +
#25000
b10010 "
b10010 /
b11000111 (
b11000111 ,
b1001 '
b1001 +
#30000
b10110 "
b10110 /
b100 *
b100 -
b1100010 (
b1100010 ,
b1110100 '
b1110100 +
#35000
1$
b11100100 "
b11100100 /
b111100100 0
1)
b1 *
b1 -
b110010 (
b110010 ,
b10110 '
b10110 +
#40000
b10000000 "
b10000000 /
b0 0
0$
0)
b101 *
b101 -
b10010000 (
b10010000 ,
b1000000 '
b1000000 +
#45000
b1010100 "
b1010100 /
b1010100 0
b0 *
b0 -
b1001 (
b1001 ,
b1001011 '
b1001011 +
#50000
1$
b11111 "
b11111 /
b100011111 0
b1101010 (
b1101010 ,
b10110101 '
b10110101 +
#55000
b11101111 "
b11101111 /
b0 0
0$
1)
b11 *
b11 -
b1100111 (
b1100111 ,
b10001110 '
b10001110 +
#60000
b110010 "
b110010 /
b101 *
b101 -
b11110 (
b11110 ,
b1100101 '
b1100101 +
#65000
b11001100 "
b11001100 /
0)
b100 *
b100 -
b1101100 (
b1101100 ,
b10100000 '
b10100000 +
#70000
b1111010 "
b1111010 /
1)
b101 *
b101 -
b11011011 (
b11011011 ,
b11110101 '
b11110101 +
#75000
b11110011 "
b11110011 /
b11110011 0
0)
b0 *
b0 -
b10010101 (
b10010101 ,
b1011110 '
b1011110 +
#80000
1#
1$
b1101001 "
b1101001 /
b101101001 0
1)
b10100111 (
b10100111 ,
b11000010 '
b11000010 +
#85000
b11111 "
b11111 /
b0 0
0#
0$
b101 *
b101 -
b10001010 (
b10001010 ,
b111111 '
b111111 +
#90000
b10111 "
b10111 /
b100 *
b100 -
b10100110 (
b10100110 ,
b10110001 '
b10110001 +
#95000
b10100001 "
b10100001 /
b10100001 0
0)
b1 *
b1 -
b1011011 (
b1011011 ,
b11111100 '
b11111100 +
#100000
